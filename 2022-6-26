


px 

%

em  -> 지정 사이즈 기반으로 배수로 사이즈 계산
      단점/ 부모 10px -> 자식 2em (20px) -> 자식의자식 2em (40px)
      바로 위의 부모 element의 사이즈를 기준으로 잡는 단점 

rem (root em)  -> 최상위 element를(브라우저 기준) 사이즈 기준으로 잡고 배수를 계산
                부모-자식 상관 x




vw viewport 넓이기준
vh viewport 높이기준

vmin -> 가로 세로중 작은쪽 기준 100vmin (100%)
vmax -> 가로 세로중 큰쪽 기준


opacity propert는 부모-자식간 상속이 되지만

rgba로 작성할 경우 상속이 되지 않는다


css 에서 * { property } -> 전체에 property적용 



tag[attr~=attrvalue] (property:)  attrvalue와 같은 속성값을 가진 tag


tag[attr^=attrvalue] (property:)  attrvalue로 시작하는 속성값을 가진 tag


tag[attr$=attrvalue] (property:)  attrvalue 로 끝나는 속성값을 가진 tag


tag[attr*=attrvalue] (property:) 어디에든 attrvalue의 속성값을 가진 tag


box-sizing property의 defualt는 content-box임 즉

box에서 content의 높이와 넓이가 기본 height width임

그래서 box-sizing:border-box로 해주면 content+padding+border의 높이 넓이를 기본 높이 넓이로 본다
==> box-sizing자체를 border-box로 해놓고 시작하는 경우가 많다

content 400px --> borderbox --> content+padding+border 400px


width height margin padding border box-sizing 등 box model관련은 상속되지 않음


content가 box보다 커서 넘칠경우 overflow:hidden으로 해주면 감출수있다


block특성을 가진 box는 width값을 지정하고
 margin-left:auto margin-right:auto를 하면 자동 중앙정렬이 된다


inline특성을 가지는 element안에 block특성을 가지는 element는 포함 x

<span> <div></div> </span> 하면 div의 block특성 발휘 x

block들은 세로/열(column)로 배치되지만
inline들은 가로/행(row)로 배치된다

inline-block은 block의 특성을 가지면서도 inline처럼 가로행에 배치가된다

visivility 요소를 보이게할지 말지

display:none;은 해당 요소가 차지하던 공간까지 사라짐

하지만 visivility는 단순히 보이게 할지 말지만 결정함


inline특성을 가진 element의 경우 
line-height property를 통해 장평, 라인높이를 조정 가능

--> 줄간격 상하조정시


white-space:nowrap 줄바꿈이고 나발이고 한줄로 쭉 써버림
white-space:pre 스페이스 줄바꿈을 가능하게 해줌 -> 브라우저 크기가 변해도 줄바꿈 변하지않아
white-space:pre-wrap 브라우저 크기에 맞춰 형태가 변하긴 하지만 코드내의 줄바꿈은 반영해줌 


overflow:hidden일때

text-overflow:ellipsis로 숨겨진 부분이 있다는것을 말줄임표로 알려주는 경우


position:absolute의 경우 부모요소중 relative가 있으면 거기를 기준으로 위치를 옮긴다


steps(2, start)  0->1초로 출발할때 움직임 1->2초 갈때 움직임 
steps(2, end)  0->1초 도달할때 움직임 1->2초로 도달할때 움직임

animation-direction:normal 정상적
animation-direction:reverse 반대부터 시작
animation-direction:alternate 갔다가 다시옴
animation-direction:alternate-reverse   revserse -> normal 진행

 animation-fill-mode: forwards; -> 움직임 마지막 상태로 종결


transform의 움직임 중심점은 해당 요소의 중심이다.
이 중심점을 변경하려면 transform-origin을 사용한다

vertical-align 수직정렬 top middle bottom

상속이 안되는것들도 inherit property value로 상속 가능하다


우선순위 !important > 태그안에 style로 적은것(inline style) > id 선택자로 적용 > class pseudo class html attribute로 선택한 셀렉터 > 태그 가상요소::셀렉터
         전체(*)로 선택한 셀렉터 > 상속된 프로퍼티

!important혹은 inline style은 지양한다
